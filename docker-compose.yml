version: '3'

networks:
  spring-nginx:

services:
  load-balancer:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: load-balancer
    restart: unless-stopped
    tty: true
    ports:
      - "9090:9090"
    networks:
      - spring-nginx

  service1:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: service1
    networks:
      - spring-nginx
  service2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: service2
    networks:
      - spring-nginx
  service3:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: service3
    networks:
      - spring-nginx

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.87.0
    deploy:
      resources:
        limits:
          memory: 125M
    restart: unless-stopped
    command: [ "--config=/etc/otelcol-contrib/config.yaml" ]
    volumes:
      - ./otel-collector/config.yaml:/etc/otelcol-contrib/config.yaml
    ports:
      - "1888:1888" # pprof extension
      - "8888:8888" # Prometheus metrics exposed by the collector
      - "8889:8889" # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317" # OTLP gRPC receiver
      - "4318:4318" # OTLP http receiver
      - "55679:55679" # zpages extension
    networks:
      - spring-nginx
  loki:
    image: grafana/loki:2.9.0
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    networks:
      - spring-nginx

  promtail:
    image: grafana/promtail:2.9.0
    command: -config.file=/etc/promtail/config.yml
    volumes:
      - /var/log:/var/log
    networks:
      - spring-nginx

  grafana:
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    depends_on:
      - loki
      - promtail
    networks:
      - spring-nginx
